# Created by 
https://www.toptal.com/developers/gitignore/api/swift,objective-c,cocoscreator
# Edit at 
https://www.toptal.com/developers/gitignore?templates=swift,objective-c,cocoscreator

### CocosCreator ###
#/////////////////////////////////////////////////////////////////////////////
# Cocos Creator Projects

build/
library/
temp/
local/
jsb-default/
jsb-binary/
jsb-link/
web-desktop/
web-mobile/
runtime/
jsb/
export/

# Logs and databases

*.log
*.sql
*.sqlite

# files for debugger

*.sln
*.csproj
*.pidb
*.unityproj
*.suo

# OS generated files

.DS_Store
ehthumbs.db
Thumbs.db

# exvim files

*UnityVS.meta
*.err
*.err.meta
*.exvim
*.exvim.meta
*.vimentry
*.vimentry.meta
*.vimproject
*.vimproject.meta
.vimfiles.*/
.exvim.*/
quick_gen_project_*_autogen.bat
quick_gen_project_*_autogen.bat.meta
quick_gen_project_*_autogen.sh
quick_gen_project_*_autogen.sh.meta
.exvim.app

# webstorm files

.idea/

# VSCode files

creator.d.ts
.vscode/

### Objective-C ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, 
Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting 
Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting 
Xcode 4)
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

# CocoaPods
# We recommend against adding the Pods directory to your .gitignore. 
However
# you should judge for yourself, the pros and cons are mentioned at:
# 
https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
# Pods/
# Add this line if you want to avoid checking in source code from the 
Xcode workspace
# *.xcworkspace

# Carthage
# Add this line if you want to avoid checking in source code from Carthage 
dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are 
needed.
# For more information about the recommended setup visit:
# 
https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
# After new code Injection tools there's a generated folder 
/iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

### Objective-C Patch ###

### Swift ###
# Xcode
# gitignore contributors: remember to update Global/Xcode.gitignore, 
Objective-C.gitignore & Swift.gitignore






## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
# Add this line if you want to avoid checking in source code from Swift 
Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
# Xcode automatically generates this directory with a .xcworkspacedata 
file and xcuserdata
# hence it is not needed unless you have added a package configuration 
file to your project
# .swiftpm

.build/

# CocoaPods
# We recommend against adding the Pods directory to your .gitignore. 
However
# you should judge for yourself, the pros and cons are mentioned at:
# 
https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
# Pods/
# Add this line if you want to avoid checking in source code from the 
Xcode workspace
# *.xcworkspace

# Carthage
# Add this line if you want to avoid checking in source code from Carthage 
dependencies.
# Carthage/Checkouts


# Accio dependency management
Dependencies/
.accio/

# fastlane
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are 
needed.
# For more information about the recommended setup visit:
# 
https://docs.fastlane.tools/best-practices/source-control/#source-control


# Code Injection
# After new code Injection tools there's a generated folder 
/iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode


# End of 
https://www.toptal.com/developers/gitignore/api/swift,objective-c,cocoscreator
